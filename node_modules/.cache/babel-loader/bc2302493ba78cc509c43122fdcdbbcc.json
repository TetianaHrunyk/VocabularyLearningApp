{"ast":null,"code":"var _jsxFileName = \"/home/tania/Documents/uni/uniba2nd/TIA/vocs/src/components/Left.js\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\"; //import UserContext from \"../contexts/UserContext\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Left = props => {\n  // const { text, parsed, handleParse, handleText , queue, handleWordClick, back, handleBack} = props\n  const {\n    text,\n    parsed,\n    handleParse,\n    handleText,\n    handleWordClick,\n    handleBack\n  } = props;\n\n  function parseText(text) {\n    return text.split(\" \").filter(elem => elem !== \" \").map(elem => elem.toLowerCase().replace(/[^\\w\\s]|_/g, \"\")).map(elem => {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        value: elem,\n        onClick: handleWordClick,\n        children: elem\n      }, elem + Math.floor(Math.random() * 1000), false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this);\n    });\n  }\n\n  if (!parsed) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Input Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          placeholder: \"Input text\",\n          value: text,\n          onChange: handleText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleParse,\n          children: \"Parse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Input Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), parseText(text), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBack,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c = Left;\nexport default Left;\n\nvar _c;\n\n$RefreshReg$(_c, \"Left\");","map":{"version":3,"sources":["/home/tania/Documents/uni/uniba2nd/TIA/vocs/src/components/Left.js"],"names":["Card","Form","Left","props","text","parsed","handleParse","handleText","handleWordClick","handleBack","parseText","split","filter","elem","map","toLowerCase","replace","Math","floor","random"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,sBAAjB;AACA,OAAOC,IAAP,MAAiB,sBAAjB,C,CACA;;;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACvB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,WAAhB;AAA6BC,IAAAA,UAA7B;AAA0CC,IAAAA,eAA1C;AAA2DC,IAAAA;AAA3D,MAAyEN,KAA/E;;AAEC,WAASO,SAAT,CAAmBN,IAAnB,EAAyB;AACvB,WACEA,IAAI,CAACO,KAAL,CAAW,GAAX,EACCC,MADD,CACSC,IAAI,IAAIA,IAAI,KAAK,GAD1B,EAECC,GAFD,CAEKD,IAAI,IAAIA,IAAI,CAACE,WAAL,GAAmBC,OAAnB,CAA2B,YAA3B,EAAyC,EAAzC,CAFb,EAGCF,GAHD,CAGKD,IAAI,IAAI;AACX,0BACI;AAAQ,QAAA,KAAK,EAAIA,IAAjB;AACE,QAAA,OAAO,EAAEL,eADX;AAAA,kBAIGK;AAJH,SAEOA,IAAI,GAACI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAFZ;AAAA;AAAA;AAAA;AAAA,cADJ;AAQD,KAZD,CADF;AAeD;;AAED,MAAI,CAACd,MAAL,EAAa;AACX,wBACE,QAAC,IAAD;AAAA,6BACE,QAAC,IAAD,CAAM,IAAN;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,EAAE,EAAC,UADL;AAEE,UAAA,WAAW,EAAC,YAFd;AAGE,UAAA,KAAK,EAAED,IAHT;AAIE,UAAA,QAAQ,EAAEG;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAJF,eAWE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAED,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD,GAlBD,MAkBO;AACL,wBACE,QAAC,IAAD;AAAA,6BACE,QAAC,IAAD,CAAM,IAAN;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIKI,SAAS,CAACN,IAAD,CAJd,eAKE,QAAC,IAAD,CAAM,IAAN;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE;AAAQ,UAAA,OAAO,EAAEK,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;AACF,CAxDD;;KAAMP,I;AA0DN,eAAeA,IAAf","sourcesContent":["import Card from \"react-bootstrap/Card\"\nimport Form from \"react-bootstrap/Form\"\n//import UserContext from \"../contexts/UserContext\"\n\n\nconst Left = (props) => {\n // const { text, parsed, handleParse, handleText , queue, handleWordClick, back, handleBack} = props\n const { text, parsed, handleParse, handleText , handleWordClick, handleBack} = props\n\n  function parseText(text) {\n    return (\n      text.split(\" \")\n      .filter( elem => elem !== \" \")\n      .map(elem => elem.toLowerCase().replace(/[^\\w\\s]|_/g, \"\"))\n      .map(elem => {\n        return (\n            <button value = {elem} \n              onClick={handleWordClick} \n              key={elem+Math.floor(Math.random() * 1000)}\n            >\n              {elem}\n            </button>\n        )\n      })\n    )\n  }\n  \n  if (!parsed) {\n    return (\n      <Card>\n        <Card.Body>\n          <Card.Title>\n            Input Text\n          </Card.Title>\n          <Form.Control\n            as='textarea'\n            placeholder='Input text'\n            value={text}\n            onChange={handleText}\n          />\n          \n          <button type='submit' onClick={handleParse}>Parse</button>\n        </Card.Body>\n      </Card>\n    );\n  } else {\n    return (\n      <Card>\n        <Card.Body>\n          <Card.Title>\n            Input Text\n          </Card.Title>\n            {parseText(text)}\n          <Card.Text>\n            <br />\n          </Card.Text>\n          <button onClick={handleBack}>Back</button>\n        </Card.Body>\n      </Card>\n    )\n  }\n}\n \nexport default Left;"]},"metadata":{},"sourceType":"module"}