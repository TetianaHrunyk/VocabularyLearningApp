{"ast":null,"code":"var _jsxFileName = \"/home/tania/Documents/uni/uniba2nd/TIA/vocs/src/components/Cards.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useContext } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport django_host from \"./paths\";\nimport Alert from \"react-bootstrap/Alert\";\nimport UserContext from \"../contexts/UserContext.js\";\nimport useGetData from \"../hooks/useGetData\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst zip = (a1, a2) => a1.map((x, i) => [x, a2[i]]);\n\nconst decksNames = localStorage.getItem(\"decksNames\").split(\",\");\nconst decksIds = localStorage.getItem(\"decksIds\").split(\",\");\nconst zipped = zip(decksIds, decksNames);\n\nconst Cards = () => {\n  _s();\n\n  var _locationData$state;\n\n  let locationData = useLocation();\n  const [deleted, setDeleted] = useState(false);\n  const [created, setCreated] = useState(false);\n  const [deck, setDeck] = useState(((_locationData$state = locationData.state) === null || _locationData$state === void 0 ? void 0 : _locationData$state.deckId) || null);\n  const {\n    data,\n    isPending,\n    error\n  } = useGetData(django_host + \"api/cards/\", \"GET\", `JWT ${localStorage.getItem(\"token\")}`, deleted, created, deck);\n  const cards = data || [];\n  const [newCardName, setNewCardName] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n  const [apiError, setApiError] = useState(\"\");\n  const {\n    username: user\n  } = useContext(UserContext);\n  const [sort, setSort] = useState(\"added\");\n\n  const handleCreateNewCard = e => {\n    e.preventDefault();\n    const intDeck = parseInt(deck);\n    const data = {\n      front: newCardName,\n      back,\n      deck: intDeck,\n      user\n    };\n    fetch(django_host + \"api/cards/\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      setCreated(true);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n    setNewCardName(\"\");\n    setBack(\"\");\n    setCreated(false);\n  };\n\n  const handleEdit = e => {\n    e.preventDefault();\n    console.log(\"edit\");\n  };\n\n  const handleDelete = e => {\n    e.preventDefault();\n    fetch(django_host + \"api/cards/\" + e.target.value, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({})\n    }).then(() => setDeleted(true)).catch(e => {\n      console.log(\"Error: \", e.message);\n      setApiError(e.message);\n    });\n    setDeleted(false);\n  };\n\n  function makeSelectDeck(defDeck) {\n    return zipped.map(deck => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: deck[0],\n        children: deck[1]\n      }, deck[0], false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  const handleSort = e => {\n    setSort(e.target.value);\n  };\n\n  const handleDeck = e => {\n    setDeck(e.target.value);\n  };\n\n  function parseDate(timestamp) {\n    const date = new Date(timestamp);\n    return date.toLocaleString();\n  }\n\n  function makeDeck(data, deck, sort) {\n    const deckInt = parseInt(deck);\n\n    if (deck === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 14\n      }, this);\n    } else {\n      return data.filter(card => card.deck === deckInt).sort((a, b) => a[sort] > b[sort]).map(card => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            minWidth: \"30%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: card.front\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"Back:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), \" \", card.back, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"Added:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this), \" \", parseDate(card.added), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"Revised:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this), \" \", parseDate(card.revised), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              value: card.id,\n              onClick: e => handleEdit(e),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              value: card.id,\n              onClick: e => handleDelete(e),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: deck ? \"Cards in \" + zipped.filter(elem => elem[0] == deck)[0][1] : \"Select deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), apiError !== \"\" ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: [\" \", apiError, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 26\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), deck !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Add a New Card to\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: zipped.filter(elem => elem[0] == deck)[0][1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleCreateNewCard(e),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Front\",\n          value: newCardName,\n          onChange: e => setNewCardName(e.target.value),\n          id: \"newCardName\" + newCardName,\n          name: \"newCardName\" + newCardName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Back\",\n          value: back,\n          onChange: e => setBack(e.target.value),\n          id: \"back\" + newCardName,\n          name: \"back\" + newCardName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Deck: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"deck\",\n            onChange: e => handleDeck(e),\n            defaultValue: deck ? deck : \"-------\",\n            children: [!deck ? /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"dummy\",\n              children: \"--------\"\n            }, \"dummy\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this) : \"\", makeSelectDeck(deck)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Sort by: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"sort\",\n            onChange: e => handleSort(e),\n            defaultValue: sort,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"added\",\n              children: \"Added\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"revised\",\n              children: \"Revised\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"front\",\n              children: \"Front\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"back\",\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardDeck, {\n        children: makeDeck(cards, deck, sort)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cards, \"xBRvzmWRPoed5dU7S5JLcM6Jizc=\", false, function () {\n  return [useLocation, useGetData];\n});\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/home/tania/Documents/uni/uniba2nd/TIA/vocs/src/components/Cards.js"],"names":["useState","useContext","Card","CardDeck","django_host","Alert","UserContext","useGetData","Row","Col","useLocation","zip","a1","a2","map","x","i","decksNames","localStorage","getItem","split","decksIds","zipped","Cards","locationData","deleted","setDeleted","created","setCreated","deck","setDeck","state","deckId","data","isPending","error","cards","newCardName","setNewCardName","back","setBack","apiError","setApiError","username","user","sort","setSort","handleCreateNewCard","e","preventDefault","intDeck","parseInt","front","fetch","method","headers","Authorization","body","JSON","stringify","then","response","json","catch","console","handleEdit","log","handleDelete","target","value","message","makeSelectDeck","defDeck","handleSort","handleDeck","parseDate","timestamp","date","Date","toLocaleString","makeDeck","deckInt","filter","card","a","b","minWidth","added","revised","id","elem"],"mappings":"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","sourcesContent":["import { useState} from \"react\";\nimport { useContext } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport django_host from \"./paths\";\nimport Alert from \"react-bootstrap/Alert\";\nimport UserContext from \"../contexts/UserContext.js\";\nimport useGetData from \"../hooks/useGetData\";\nimport { Row, Col } from \"react-bootstrap\";\nimport {useLocation} from \"react-router-dom\";\n\nconst zip = (a1, a2) => a1.map((x, i) => [x, a2[i]]);\nconst decksNames = localStorage.getItem(\"decksNames\").split(\",\");\nconst decksIds = localStorage.getItem(\"decksIds\").split(\",\");\nconst zipped = zip(decksIds, decksNames);\n\nconst Cards = () => {\n  let locationData = useLocation();\n  const [deleted, setDeleted] = useState(false);\n  const [created, setCreated] = useState(false);\n  const [deck, setDeck] = useState( locationData.state?.deckId || null);\n  \n  const { data, isPending, error } = useGetData(\n                                      django_host + \"api/cards/\",\n                                      \"GET\",\n                                      `JWT ${localStorage.getItem(\"token\")}`,\n                                      deleted,\n                                      created,\n                                      deck\n                                    );\n  const cards = data || [];\n\n  const [newCardName, setNewCardName] = useState(\"\");\n  const [back, setBack] = useState(\"\");\n  const [apiError, setApiError] = useState(\"\");\n  const { username: user } = useContext(UserContext);\n\n  const [sort, setSort] = useState(\"added\");\n\n  const handleCreateNewCard = (e) => {\n    e.preventDefault();\n    const intDeck = parseInt(deck);\n    const data = { front: newCardName, back, deck: intDeck, user };\n    fetch(django_host + \"api/cards/\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setCreated(true);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n    setNewCardName(\"\");\n    setBack(\"\");\n    setCreated(false);\n  };\n\n  const handleEdit = (e) => {\n    e.preventDefault();\n    console.log(\"edit\");\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    fetch(django_host + \"api/cards/\" + e.target.value, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({}),\n    })\n      .then(() => setDeleted(true))\n      .catch((e) => {\n        console.log(\"Error: \", e.message);\n        setApiError(e.message);\n      });\n    setDeleted(false);\n  };\n\n  function makeSelectDeck(defDeck) {\n    return zipped.map((deck) => {\n      return (\n        <option value={deck[0]} key={deck[0]}>\n          {deck[1]}\n        </option>\n      );\n    });\n  }\n\n  const handleSort = (e) => {\n    setSort(e.target.value);\n  };\n\n  const handleDeck = (e) => {\n    setDeck(e.target.value);\n  };\n\n  function parseDate(timestamp){\n    const date = new Date(timestamp)\n    return date.toLocaleString()\n  }\n\n  function makeDeck(data, deck, sort) {\n    const deckInt = parseInt(deck);\n\n    if (deck === null) {\n      return <div></div>;\n    } else {\n      return data\n        .filter((card) => card.deck === deckInt)\n        .sort((a, b) => a[sort] > b[sort])\n        .map((card) => {\n          return (\n            <Card style={{ minWidth: \"30%\" }} key={card.id}>\n              <Card.Body>\n                <Card.Title>{card.front}</Card.Title>\n                <Card.Text>\n                  <u>Back:</u> {card.back}\n                  <br />\n                  <u>Added:</u> { parseDate(card.added) }\n                  <br />\n                  <u>Revised:</u> { parseDate(card.revised) }\n                  <br />\n                </Card.Text>\n                <button value={card.id} onClick={(e) => handleEdit(e)}>\n                  Edit\n                </button>\n                <button value={card.id} onClick={(e) => handleDelete(e)}>\n                  Delete\n                </button>\n              </Card.Body>\n            </Card>\n          );\n        });\n    }\n  }\n\n  return (\n    <div className=\"home\">\n      <h2>\n        {deck\n          ? \"Cards in \" + zipped.filter((elem) => elem[0] == deck)[0][1]\n          : \"Select deck\"}\n      </h2>\n      {apiError !== \"\" ? <Alert variant=\"danger\"> {apiError} </Alert> : \"\"}\n      <br />\n      {deck !== null ? (\n        <div>\n          <h5>\n            Add a New Card to{\" \"}\n            <strong>{zipped.filter((elem) => elem[0] == deck)[0][1]}</strong>\n          </h5>\n          <form onSubmit={(e) => handleCreateNewCard(e)}>\n            <input\n              type=\"text\"\n              placeholder=\"Front\"\n              value={newCardName}\n              onChange={(e) => setNewCardName(e.target.value)}\n              id={\"newCardName\" + newCardName}\n              name={\"newCardName\" + newCardName}\n            />\n            <br />\n            <input\n              type=\"text\"\n              placeholder=\"Back\"\n              value={back}\n              onChange={(e) => setBack(e.target.value)}\n              id={\"back\" + newCardName}\n              name={\"back\" + newCardName}\n            />\n            <br />\n            <button type=\"submit\">Create</button>\n          </form>\n        </div>\n      ) : (\n        <div></div>\n      )}\n      <br />\n      {error && <div>{error}</div>}\n      {isPending && <div>Loading...</div>}\n      {data && (\n        <div>\n          <Row>\n            <Col>\n              <h5>Deck: </h5>\n              <select\n                name=\"deck\"\n                onChange={(e) => handleDeck(e)}\n                defaultValue={deck ? deck : \"-------\"}\n              >\n                {!deck ? (\n                  <option key=\"dummy\" value=\"dummy\">\n                    --------\n                  </option>\n                ) : (\n                  \"\"\n                )}\n                {makeSelectDeck(deck)}\n              </select>\n            </Col>\n            <Col>\n              <h5>Sort by: </h5>\n              <select\n                name=\"sort\"\n                onChange={(e) => handleSort(e)}\n                defaultValue={sort}\n              >\n                <option value=\"added\">Added</option>\n                <option value=\"revised\">Revised</option>\n                <option value=\"front\">Front</option>\n                <option value=\"back\">Back</option>\n              </select>\n            </Col>\n          </Row>\n          <CardDeck>{makeDeck(cards, deck, sort)}</CardDeck>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}