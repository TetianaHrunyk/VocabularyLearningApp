{"ast":null,"code":"var _jsxFileName = \"/home/tania/Documents/uni/uniba2nd/TIA/vocs/src/components/Decks.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useContext } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport django_host from \"./paths\";\nimport Alert from \"react-bootstrap/Alert\";\nimport UserContext from \"../contexts/UserContext.js\";\nimport useGetData from \"../hooks/useGetData\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Decks = () => {\n  _s();\n\n  const [deleted, setDeleted] = useState(false);\n  const [created, setCreated] = useState(false);\n  const {\n    data,\n    isPending,\n    error\n  } = useGetData(django_host + \"api/decks/\", \"GET\", `JWT ${localStorage.getItem(\"token\")}`, deleted, created);\n  const [newDeckName, setNewDeckName] = useState(\"\");\n  const [apiError, setApiError] = useState(\"\");\n  const {\n    username: user\n  } = useContext(UserContext);\n  if (data) localStorage.setItem(\"decks\", data);\n  /*\n  useEffect(() => {\n    return () => {\n      setDeleted(false);\n      setCreated(false);\n    };\n  });*/\n\n  const handleCreateNewDeck = (e, data) => {\n    e.preventDefault();\n    fetch(django_host + \"api/decks/\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      setCreated(true);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n    fetch(django_host + \"api/decks/\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => {\n      const decksIds = data.map(elem => elem.id);\n      const decksNames = data.map(elem => elem.deckName);\n      localStorage.setItem(\"decksIds\", decksIds);\n      localStorage.setItem(\"decksNames\", decksNames);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n    setNewDeckName(\"\");\n    setCreated(!created);\n  };\n\n  const handleEdit = e => {\n    console.log(\"edit\");\n    fetch(django_host + \"api/decks/\" + e.target.value, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      setCreated(true);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n    fetch(django_host + \"api/decks/\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => {\n      const decksIds = data.map(elem => elem.id);\n      const decksNames = data.map(elem => elem.deckName);\n      localStorage.setItem(\"decksIds\", decksIds);\n      localStorage.setItem(\"decksNames\", decksNames);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n    setNewDeckName(\"\");\n    setCreated(!created);\n  };\n\n  const handleDelete = e => {\n    fetch(django_host + \"api/decks/\" + e.target.value, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({})\n    }).then(() => setDeleted(true)).catch(e => {\n      console.log(\"Error: \", e.message);\n      setApiError(e.message);\n    });\n    fetch(django_host + \"api/decks/\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => {\n      const decksIds = data.map(elem => elem.id);\n      const decksNames = data.map(elem => elem.deckName);\n      localStorage.setItem(\"decksIds\", decksIds);\n      localStorage.setItem(\"decksNames\", decksNames);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n    setDeleted(!deleted);\n  };\n\n  function makeDeck(data) {\n    return data.map(deck => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          minWidth: \"30%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: deck.deckName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Created: \", deck.created]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: '/cards',\n              state: {\n                deckId: deck.id\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              value: deck.id,\n              children: \"Browse Cards\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            value: deck.id,\n            onClick: e => handleDelete(e),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, deck.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Decks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), apiError !== \"\" ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: [\" \", apiError, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 26\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleCreateNewDeck(e, {\n        deckName: newDeckName,\n        user\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Create a New Deck:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newDeckName,\n        onChange: e => setNewDeckName(e.target.value),\n        id: \"newDeckName\" + newDeckName,\n        name: \"newDeckName\" + newDeckName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CardDeck, {\n        children: makeDeck(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Decks, \"XprRPlHt2hBCGqgjoMfFFAk1eXg=\", false, function () {\n  return [useGetData];\n});\n\n_c = Decks;\nexport default Decks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Decks\");","map":{"version":3,"sources":["/home/tania/Documents/uni/uniba2nd/TIA/vocs/src/components/Decks.js"],"names":["useState","useContext","Card","CardDeck","django_host","Alert","UserContext","useGetData","Link","Decks","deleted","setDeleted","created","setCreated","data","isPending","error","localStorage","getItem","newDeckName","setNewDeckName","apiError","setApiError","username","user","setItem","handleCreateNewDeck","e","preventDefault","fetch","method","headers","Authorization","body","JSON","stringify","then","response","json","catch","console","decksIds","map","elem","id","decksNames","deckName","handleEdit","log","target","value","handleDelete","message","makeDeck","deck","minWidth","pathname","state","deckId"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useContext } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport django_host from \"./paths\";\nimport Alert from \"react-bootstrap/Alert\";\nimport UserContext from \"../contexts/UserContext.js\";\nimport useGetData from \"../hooks/useGetData\";\nimport {Link} from \"react-router-dom\"\n\nconst Decks = () => {\n  const [deleted, setDeleted] = useState(false);\n  const [created, setCreated] = useState(false);\n  const { data, isPending, error } = useGetData(\n    django_host + \"api/decks/\",\n    \"GET\",\n    `JWT ${localStorage.getItem(\"token\")}`,\n    deleted,\n    created\n  );\n  const [newDeckName, setNewDeckName] = useState(\"\");\n  const [apiError, setApiError] = useState(\"\");\n  const { username: user } = useContext(UserContext);\n\n  if (data) localStorage.setItem(\"decks\", data);\n  /*\n  useEffect(() => {\n    return () => {\n      setDeleted(false);\n      setCreated(false);\n    };\n  });*/\n\n  const handleCreateNewDeck = (e, data) => {\n    e.preventDefault();\n    fetch(django_host + \"api/decks/\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setCreated(true);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n    fetch(django_host + \"api/decks/\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        const decksIds = data.map((elem) => elem.id);\n        const decksNames = data.map((elem) => elem.deckName);\n        localStorage.setItem(\"decksIds\", decksIds);\n        localStorage.setItem(\"decksNames\", decksNames);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n    setNewDeckName(\"\");\n    setCreated(!created);\n  };\n\n  const handleEdit = (e) => {\n    console.log(\"edit\");\n    fetch(django_host + \"api/decks/\"+e.target.value, {\n      method: \"PUT\",\n      headers: {\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setCreated(true);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n    fetch(django_host + \"api/decks/\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        const decksIds = data.map((elem) => elem.id);\n        const decksNames = data.map((elem) => elem.deckName);\n        localStorage.setItem(\"decksIds\", decksIds);\n        localStorage.setItem(\"decksNames\", decksNames);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n    setNewDeckName(\"\");\n    setCreated(!created);\n  };\n\n  const handleDelete = (e) => {\n    fetch(django_host + \"api/decks/\" + e.target.value, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({}),\n    })\n      .then(\n        () => setDeleted(true)\n      )\n      .catch((e) => {\n        console.log(\"Error: \", e.message);\n        setApiError(e.message);\n      });\n    fetch(django_host + \"api/decks/\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`,\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        const decksIds = data.map((elem) => elem.id);\n        const decksNames = data.map((elem) => elem.deckName);\n        localStorage.setItem(\"decksIds\", decksIds);\n        localStorage.setItem(\"decksNames\", decksNames);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n    setDeleted(!deleted);\n  };\n\n  function makeDeck(data) {\n    return data.map((deck) => {\n      return (\n        <Card style={{ minWidth: \"30%\" }} key={deck.id}>\n          <Card.Body>\n            <Card.Title>{deck.deckName}</Card.Title>\n            <Card.Text>Created: {deck.created}</Card.Text>\n            <Link to={{ pathname: '/cards', state: {deckId: deck.id} }}>\n              <button value={deck.id} >\n                Browse Cards\n              </button>\n            </Link>\n            <button value={deck.id} onClick={(e) => handleDelete(e)}>\n              Delete\n            </button>\n          </Card.Body>\n        </Card>\n      );\n    });\n  }\n\n  return (\n    <div className=\"home\">\n      <h2>Decks</h2>\n      {apiError !== \"\" ? <Alert variant=\"danger\"> {apiError} </Alert> : \"\"}\n      <form\n        onSubmit={(e) =>\n          handleCreateNewDeck(e, { deckName: newDeckName, user })\n        }\n      >\n        <br />\n        <label>Create a New Deck:</label>\n        <br />\n        <input\n          type=\"text\"\n          value={newDeckName}\n          onChange={(e) => setNewDeckName(e.target.value)}\n          id={\"newDeckName\" + newDeckName}\n          name={\"newDeckName\" + newDeckName}\n        />\n        <button type=\"submit\">Create</button>\n      </form>\n      <br />\n      {error && <div>{error}</div>}\n      {isPending && <div>Loading...</div>}\n      {data && (\n        <div>\n          <CardDeck>{makeDeck(data)}</CardDeck>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Decks;\n"]},"metadata":{},"sourceType":"module"}